Features:
- file transfer simulation
- replication


File transfer:

- aggiungere la network topology a HdfsExample0

- aggiungere dei logs a fine esecuzione dell'esempio che mostrano il current left storage nei vari drives dei DNs,
  così vediamo effettivamente che i files sono stati salvati

- controllare che i tempi dei cloudlets abbiano senso
    => perchè i due cloudlets del client terminano molto dopo quelli
    dei Data Nodes? li aspettano? pensavo di aver rimosso che li aspettassero, dovrebbero essere indipendenti!
    I cloudlets del client spawnano quelli sui DN ma poi terminano per fatti loro subito.
    => se necessario ricontrollare come avviene la catena dei vari send tra HdfsDatacenter e HdfsDatacenterBroker per
    per quanto riguarda il cloudlet che legge e poi l'invio al Data Node del cloudlet che scrive

- fare in modo che i cloudlets possono essere allocati solo alle Vms con lo stesso HdfsType (client o data node),
  al momento il problema è aggirato dal fatto che faccio manualmente una cloudlet bind, ma idealmente non dovrei aver
  bisogno di farla, e il programma fa tutto in automatico => questo forse non è fattibile... magari dovrò in futuro
  creare l'HDFS master node che fa direttamente lui i binds.

IDEAS:
- aggiungere un sistema di tags per le VMs in modo che possiamo settare chi è un client e chi è un data node, e poi il
  resto viene gestito dal broker correttamente in automatico, e poi il broker nei logs può anche dire "client bla bla"
  "data node bla bla" perchè sa chi sono i clients e chi sono i data nodes

- idealmente in HDFS c'è proprio un ente a parte che gestisce dove vanno scritti i files, magari dovrei implementare
  quello invece che far passare tutto per il broker, che non è realistico. Sarebbe come una sorta di broker secondario
  a cui il broker primario chiede dove andare a scrivere i files, e in questo modo posso eliminare il fatto che al
  momento devo dire io a prescindere quali sono le VMs di destinazione